{"version":3,"sources":["components/Navbar.js","components/Details.js","components/Meals.js","components/Drinks.js","components/Complements.js","components/Breakfastfood.js","components/Menu.js","components/BreakfastDrinks.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","src","Details","Meals","Drinks","Complements","Breakfastfood","hour","Date","getHours","Menu","react_router_dom","to","BreakfastDrinks","App","components_Navbar","components_Menu","components_Details","react_router","exact","path","component","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ab4f6b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n    return(\r\n        <nav className=\"Nav-bq\">         \r\n            <h2 className=\"Order-Details\">Detalle de orden</h2>\r\n\r\n            <a className=\"Nav-bq-menu\"><img src=\"../assets/hamburgermenu.png\"></img></a>\r\n    </nav>\r\n\r\n);\r\n    }\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Details = () => {\r\nreturn (\r\n    <div className=\"Ticket-details\">\r\n            <h3 className=\"Ticket-details-h\">Cantidad    Descripción    Monto</h3>\r\n    <button className=\"New-order\">NUEVA ORDEN</button>\r\n    </div>\r\n);\r\n}\r\nexport default Details;","import React from 'react';\r\n\r\nconst Meals = (props) => (\r\n    <div className=\"main-content\">\r\n        <div className=\"container\">\r\n            <p className=\"Box\">Hamburguesa Sencilla</p>\r\n            <p className=\"Box\">Hamburguesa Doble</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Meals;","import React from 'react';\r\n\r\nconst Drinks = (props) => (\r\n    <div className=\"main-content\">\r\n        <div className=\"container\">\r\n        <p className=\"Box\">Refresco</p>\r\n            <p className=\"Box\">Agua</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Drinks;","import React from 'react';\r\n\r\nconst Complements = (props) => (\r\n    <div className=\"main-content\">\r\n        <div className=\"container\">\r\n        <p className=\"Box\">Papas a la francesa</p>\r\n            <p className=\"Box\">Aros de cebolla</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Complements;","import React from 'react';\r\n\r\nconst Breakfastfood = (props) => (\r\n    <div className=\"main-content\">\r\n        <div className=\"container\">\r\n        <p className=\"Box\">Sándwich de jamón y queso</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Breakfastfood;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nlet hour = new Date().getHours();\r\n\r\n\r\nconst Menu = () => {\r\n    if (hour >= 5 && hour < 12) {\r\n    return (\r\n        <div className=\"Main-menu\">\r\n            <nav>\r\n            <ul>\r\n                <li className='Nav-food-and-drinks'><Link className=\"nav-menu__link\" to=\"/breakfastfood\"><a>Alimentos</a></Link></li> \r\n                <li className='Nav-food-and-drinks'><Link className=\"nav-menu__link\" to=\"/breakfastdrinks\"><a>Bebidas</a></Link></li>\r\n            </ul>\r\n            <hr />\r\n            </nav>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"Main-menu\">\r\n                <nav>\r\n            <ul>\r\n            <li className='Nav-food-and-drinks'><Link className=\"nav-menu__link\" to=\"/meals\"><a>Alimentos</a></Link></li>\r\n            \r\n            <li className='Nav-food-and-drinks'><Link className=\"nav-menu__link\" to=\"/drinks\"><a>Bebidas</a></Link></li>\r\n            \r\n            <li className='Nav-food-and-drinks'><Link className=\"nav-menu__link\" to=\"/complements\"><a>Complementos</a></Link></li>                \r\n            </ul>\r\n            </nav>\r\n            <hr />\r\n        </div>\r\n        );\r\n    }; \r\n};\r\n\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst BreakfastDrinks = (props) => (\r\n    <div className=\"main-content\">\r\n        <div className=\"container\">\r\n        <p className=\"Box\">Café americano</p>\r\n            <p className=\"Box\">Café con leche</p>\r\n            <p className=\"Box\">Jugo natural</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default BreakfastDrinks;","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport './css/style.css';\r\nimport Navbar from './components/Navbar';\r\nimport Details from './components/Details';\r\nimport Meals from './components/Meals';\r\nimport Drinks from './components/Drinks';\r\nimport Complements from './components/Complements';\r\nimport Breakfastfood from './components/Breakfastfood';\r\nimport Menu from './components/Menu';\r\nimport BreakfastDrinks from './components/BreakfastDrinks';\r\n\r\n//BQ\r\n\r\nclass App extends React.Component{\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n    <div className=\"App\">\r\n    <Navbar/>\r\n    <Menu/>\r\n    <Details/>\r\n    <Route exact path=\"/meals\" component={Meals}/>\r\n\r\n    <Route exact path=\"/breakfastfood\" component={Breakfastfood}/>\r\n    <Route exact path=\"/breakfastdrinks\" component={BreakfastDrinks}/>\r\n    <Route exact path=\"/drinks\" component={Drinks}/>\r\n    <Route exact path=\"/complements\" component={Complements}/>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}